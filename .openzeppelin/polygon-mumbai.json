{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9A8EA2F15C43e86FbD28f1E22B73Ca0fA384b4e9",
    "txHash": "0x6ab4796464e9f54b2d60bf7a34b1c0ed94cdae53437bcbb2b3238af659ecd7dc"
  },
  "proxies": [
    {
      "address": "0xdb9DB23F58fb06ED41fa59997bAA9c50654A95BD",
      "txHash": "0x3211414c4cc76f73832b47dcee5ff3d70a5646dc2dcbedbabd41948103954bb1",
      "kind": "transparent"
    },
    {
      "address": "0xE579276F0c0532E8fD2f43292B9EeDf1CA5222C3",
      "txHash": "0xe9b6d6f1d93da12478efc5fa2f02b2b1f1b9f58c05de5f0d24124c708efc8f38",
      "kind": "transparent"
    },
    {
      "address": "0x4785755Df24Dae0fAc5224055b6F00f459e6C2f6",
      "txHash": "0x7e858072d6fde5a69a5b732409c34a743fca89c5a225d6965787513671f36cd0",
      "kind": "transparent"
    },
    {
      "address": "0x4470ecfB8ECB4a0D4C41EC94F3Ab43a33EC7Cc00",
      "txHash": "0x610584f1b7c244cc4127ceb1d96f6361c279ca87f2115e091d643af912a9b2be",
      "kind": "transparent"
    },
    {
      "address": "0x397881EB7e0948D2320C378273708484E459E413",
      "txHash": "0x43867216fd33e31f27618dde60438cea8d9c767622c53b2b872999d2c3f88b04",
      "kind": "transparent"
    },
    {
      "address": "0x62825f15315807bACcdD1a9c8416e27d3cC7Aa1a",
      "txHash": "0x204321670916d6b0400b1a473bfc9b0c2eb68406c502c6fff412752476c6044d",
      "kind": "transparent"
    },
    {
      "address": "0x460Eb61D1Dc4FAc8B6cAF60f28a7624Cc2c1167B",
      "txHash": "0xc193fce146eda00a7151800a5691b4d734fabbb0cd5fdf8abb3b7abe5ee01e23",
      "kind": "transparent"
    },
    {
      "address": "0x77e6E4dd3cE2d2Ae15F12B1F19bcf1Fe65dF2DB6",
      "txHash": "0x7ae93d8a2091da9b316ac872bebeb59b17977747b20b8d707b521e08742d4dcc",
      "kind": "transparent"
    },
    {
      "address": "0xac61b8dCF7E6fe176D02f3C4f5E951B234c349B0",
      "txHash": "0x48c339f7c77e8b1d92683aa891b5172b0ef54218fd0fbdb117a490b46190a980",
      "kind": "transparent"
    },
    {
      "address": "0x924dF058388cCA4a1eb55A21ae3c5C564E629821",
      "txHash": "0x0628cbc863be78ab846afd0dcb0f3f59b310a7c92f8758a77b73b362cf567b22",
      "kind": "transparent"
    },
    {
      "address": "0x215F48d23554F8D99A2232cb87942865b5842a92",
      "txHash": "0x27f4f4bfdc4df35457f3381a820eb1e6cad4b16b4513e403813d9718098f7b4d",
      "kind": "transparent"
    },
    {
      "address": "0x8d4d38D38F1f5D22B5d469089D8365480282dD4B",
      "txHash": "0x1b57a4f7908ca2eb5f84079ee47a83aef96b115a5290e67dc53cafa955c8b3bf",
      "kind": "transparent"
    },
    {
      "address": "0xc91d06D2d94fCcC397795f1eAe3AD5A4A327572c",
      "txHash": "0xbecc8f8ae0fe48657206122455efecbc9448d51fd3e018c617d2fd03eae98a8a",
      "kind": "transparent"
    },
    {
      "address": "0xA1988821bb9C1B83cb6B16F2E4D4Ee7F77D99aC0",
      "txHash": "0x18d10bee8b8b4b7267418a2587807126c930d4a5618ebd66a1080506e3276e8c",
      "kind": "transparent"
    },
    {
      "address": "0x30bbCCFDEDA2A48F899428d161d720D004e9df03",
      "txHash": "0x6da11f03f8a361f56bfdc5e01b4dac8636ba702b4a5b60d740136d87c200a6de",
      "kind": "transparent"
    },
    {
      "address": "0x0bf438e43Dc76FAC0758764745C3153361Ea484B",
      "txHash": "0x5d41d915d5e78da5f002bffc269db2174f5f5f5ec6a3ff355813beb6140ff493",
      "kind": "transparent"
    },
    {
      "address": "0x1A3c47DD50fda3Bbd405F96bd493D3536f36021b",
      "txHash": "0x0d8efae6b43990ee8c47661260dba8fb15d6ca0f879ca1db720cbe57c0cb246a",
      "kind": "transparent"
    },
    {
      "address": "0xc865691D7293D2Ec97FaAc5deF3C20556E992cc3",
      "txHash": "0x9fd96cbb72f6141ae307138460c8b4b17a940af1e52a76771b0518248028d9a1",
      "kind": "transparent"
    },
    {
      "address": "0xff5E73B5E01BDC0b8E9C5f5bAC1EB01C4e170170",
      "txHash": "0xb162bef5bf11ca62d443af0092032365e92a84b8d81354d2acc9790613339aa1",
      "kind": "transparent"
    },
    {
      "address": "0x1Bf572243152287f774fB0070EdCBAeb4a7743fc",
      "txHash": "0xca81b36811faf18f39404b298a08372f556930f5a0d97e7b52f2f9454343273b",
      "kind": "transparent"
    },
    {
      "address": "0x54a8d190d360a6AD5F806034284A1b9FcF2950b6",
      "txHash": "0xa15b154ed17e5ea84dd6d70c222e3f154a01774f7228b788c66805ee7700242a",
      "kind": "transparent"
    },
    {
      "address": "0xFc522A802eBC021449b268f5cF0B52C73276d0CB",
      "txHash": "0xd727057bdc2aa900c04a150b1819097c830bf99efba8ba88740df792abfcc7a4",
      "kind": "transparent"
    },
    {
      "address": "0xdFa0D7551C9553D52296781fc2C0B74065af2390",
      "txHash": "0x1f7db5667f774c307d7f87e298332d31d2531fb088569982013eb59b93d572d1",
      "kind": "transparent"
    },
    {
      "address": "0x15eEc244625b07346f3735afbcbB924e5DA1134e",
      "txHash": "0xd80a14a3d3546a73e27e5fb2af316ee8ed0602a52137ba27c033bca0ca12adee",
      "kind": "transparent"
    },
    {
      "address": "0x0248cCc4Efcd59763D8d760e8eA7903c15EFFbB5",
      "kind": "transparent"
    },
    {
      "address": "0x9e339b1b85b00feffa44b1a120702c5a40935391",
      "kind": "transparent"
    },
    {
      "address": "0x29324bb75158f0C0089E465257b81805280744e5",
      "txHash": "0xf1b5c3a8b0d7ca0f847b681c6391823405e396f16d7bf1e519edce7f3a5da5fc",
      "kind": "transparent"
    },
    {
      "address": "0x98535c280dd3e82CcB81EA7938bf33B023fe1DcB",
      "txHash": "0x389646354ab2e0ce51afefb4c078740c58c0aaa217e02e44f84b0811ce7fedac",
      "kind": "transparent"
    },
    {
      "address": "0x1F0A3f7209967D18f12e1CA396D75A7caa8a68b1",
      "txHash": "0x62ef22eaf03bbfdc07f6b6e864cc8866d8806e5cdb2f86c32f5c6233c8c17907",
      "kind": "transparent"
    }
  ],
  "impls": {
    "86f58aab68a94d636bb16cbfc4840db77576f522276ba0a8deac9df24bd39e9f": {
      "address": "0xb1F4fb76648D77D4c3F69253e1fAE812178747b2",
      "txHash": "0x23fee2e64b5e43d45e15d230d795b62152399ff33d2c0470015d6cc25cd5b1d7",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)8598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)9862_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:393"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)8340_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)8598_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)9862_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)8340_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)8347_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)8340_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)8598_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)8347_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)9862_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6ab78381927b359f64e5170dc14b020d8d4427e581c09b8e3d469940b453596d": {
      "address": "0x0E49dB4C9A522C79D09a63E5b4609c2b7FC9A7E8",
      "txHash": "0x63dcaaace8687ec776577db111cff57c1fd892ff0de5c57d1818b547fe2f1f49",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6153_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:379"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4618_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6153_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4618_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4625_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4618_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4876_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4625_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6153_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "38680f8d60b5733b17c4d6190c44eeca3aa2e8f545dc38f4a9eb332546d7825f": {
      "address": "0xbc0A348257aD4D9985B0fA95a3e550cf5ed03D84",
      "txHash": "0x1c4760cf2307d5ab1d183b90086d6d13943e73a4ffc70b65065f21a6965ff4b2",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)8627_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)9894_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:405"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)8345_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)8627_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)9894_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)8345_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)8352_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)8345_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)8627_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)8352_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)9894_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7ac09140445466c8e7e554118fa38edd3fbbdce2e8eaa541fcead3a10d508e4f": {
      "address": "0x58a4B029E49abC0970010a6fd566f27b25Cc44c7",
      "txHash": "0x6ce5fa245af79cb1d9b9cc68212d446de534e8fc14d37a7f28736e3ed03bf46f",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4882_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6180_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:410"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4618_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4882_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6180_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4618_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4625_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4618_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4882_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4625_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6180_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ef3690ce7ad53dacc11f62df35967bee5a507b2e86f41f61e5d14051b202e35c": {
      "address": "0x9f0c4E39d9440AD5a44366aC678d67ac7f12758D",
      "txHash": "0xbe5cda3fbce86b0fe7ffaa264d853d32baff3f240b55b7fccee5a1f95f799f58",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4882_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6208_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:416"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4618_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4882_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6208_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4618_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4625_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4618_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4882_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4625_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6208_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "527183e42fa578abb227e3105e8f63f5128cb0a03129cbf156bc5d4582557203": {
      "address": "0x2582696fC8eD8eabcE38aB8c86E7075068dD58d8",
      "txHash": "0x4c173be30a12a29d97af4f59c732b157711a54de5abd8e036f15a1c184416e0a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4882_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6001_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:392"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4618_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4882_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6001_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4618_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4625_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4618_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4882_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4625_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6001_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "56e47dbc3654a7097973ba9a6a2a6ca9e856783302f579ef59be454cf6d7884a": {
      "address": "0x924137852d94ebb39C85E21FBfF62a590D7a051C",
      "txHash": "0x2197e74fc61c8ed2d87f0ba8a6f6a3fa42b24bde4153c4e36fd7b1e748bdd469",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)8630_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)9796_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:405"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)8348_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)8630_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)9796_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)8348_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)8355_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)8348_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)8630_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)8355_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)9796_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8ed6c00f70c353df0d50f7b7a289e05d03894f1fd4a6e39bf97f6bf7d8886588": {
      "address": "0x9f1249e2a1EB2c0FB9c6517adA3a55217cA77dC4",
      "txHash": "0x808f6aa53d0491dc0ac8c2a8d80182b716fd686c2ba15d79587a4f4e0b3a1c70",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4885_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6078_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:417"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4621_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4885_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6078_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4621_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4628_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4621_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4885_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4628_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6078_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "12abf708565d6711c20e78e57ec247a6b00f689f75e4d00dad615897a172e4a0": {
      "address": "0xC636a8759e32D232ad66C2190d3743d626ed496A",
      "txHash": "0xa0b343c794a7d53c10af310d41bfcbef0a1400fbd426ef79972cbc33b3f0b81d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5967_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:409"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)5967_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4612_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4619_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4876_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4619_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)5967_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "744fba5f990a15a4a5f8209ec803c147fcccae35b9700ead8509c9fead5d52e8": {
      "address": "0xd1796fbC9599AE6401f55dE738C818f8F4CF9b63",
      "txHash": "0xc6f393c4ae996fe165eb17a6ebc2163e26e6f49e859f3e2f27f291316fbb1605",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5972_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:409"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)5972_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4612_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4619_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4876_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4619_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)5972_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9fece233a6ac467353f563a6ca87bd96a218fb7b7cc6c290064cdcba78c23041": {
      "address": "0xd873FBf47455B945217419764fe3C0185D3e3A06",
      "txHash": "0x1a6221256e7b632a8d4b4dc26eba8661b48d55216c6d37ac5e4add33afd54d56",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6008_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:417"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6008_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4612_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4619_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4876_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4619_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6008_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "27752878334c297ca30235e2b21677a242131fae6972575295b9d2903abd4ed8": {
      "address": "0x264fFa542DC2314332D1244099A5eC08d6E53057",
      "txHash": "0xbe5595a4e117d97a2ceb876157023250ebd9af987d97b9503ea24b8300db4425",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6004_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:416"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6004_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4612_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4619_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4876_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4619_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6004_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "743dbc4fff5c785a91a401e7a24721f7dfa6c87572338c1a7d169ad113876728": {
      "address": "0x9F731352814C576d8cd9feeC262CB03194DEE3E6",
      "txHash": "0x856c6420f0a2839cf8995cbb408027460c26dd456a0d6f2f38ad5e4efd5b71dc",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6018_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:417"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6018_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4612_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4619_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4876_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4619_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6018_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d2f979e7de23645eca470df2ddca871f110e8efd1efee0547d02c0b66e9103af": {
      "address": "0x66eC24a425aD76ae466dFbd04bac2d681793cCD1",
      "txHash": "0xd6e25c5810af663d95c8b43786b87a800c01172bd06bebf9bcf8812dd132b8be",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6011_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:417"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6011_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4612_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4619_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4876_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4619_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6011_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "555504a1594796a518397927f60bf7a603f434ea06b33c19ed276b3cc0b19f16": {
      "address": "0xD3f1Af779123cc017c00DF7B1AAe1A4d0DAcf91C",
      "txHash": "0x3b6b9252f1a937c6d0cd87b6a6ef9903b883db9a4aacf838757fe1a145b85345",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6034_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:420"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6034_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4612_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4619_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4876_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4619_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6034_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dc83e693960d9bcceaddf6011f68189b13b8402bde098117cfacee24cf80b56f": {
      "address": "0xaB800c3722d9634005F8698ca48Ec0339E851653",
      "txHash": "0xcec63f405d89251e1d0d534ba24f22dc9085ead99d0c8f2e4607537e184ecbee",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:28"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:50"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:56"
          },
          {
            "label": "_approvalForAllSeeds",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:61"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:64"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6046_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:421"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4876_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6046_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFT.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4612_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4619_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4612_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4876_storage": {
            "label": "struct GenerativeBoilerplateNFT.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4619_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6046_storage": {
            "label": "struct GenerativeBoilerplateNFT.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "40c09ae096480907b6cc331ea18176cfaa425ad8a62a3207d959072bf9b1ba23": {
      "address": "0x23Df0DB38fc6AdD998977B717B3d8fEb95040630",
      "txHash": "0xdf60d154ae28cb92e815e649efc64883595a883a327e98fc7edea6b82475e4db",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:32"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "554",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:33"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)8604_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:45"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_uint256,t_struct(ParamsOfNFT)8345_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Traits)8540_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          },
          {
            "label": "_creators",
            "offset": 0,
            "slot": "559",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:54"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "560",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)9770_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:342"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)8332_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)8535_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ParamsOfNFT)8345_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ParamsOfNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)8604_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)9770_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)8332_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfNFT)8345_storage": {
            "label": "struct BoilerplateParam.ParamsOfNFT",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ParamsOfProject)8339_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)8332_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)8604_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)8339_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)9770_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)8535_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)8540_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)8535_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5ed21340cd3e80b6d3b3a74685796c9826623157f1eb67ed10ade48cf0e8b028": {
      "address": "0xDb4D890eC554B380A95f35f07d275893fCfe328f",
      "txHash": "0xcead5eaadeab1621c419523e8d38d06c75bcba551d572135d6d36b65375a8d4d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:32"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "554",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:33"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4877_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:45"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_uint256,t_struct(ParamsOfNFT)4618_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          },
          {
            "label": "_creators",
            "offset": 0,
            "slot": "559",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:54"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "560",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6029_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:340"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ParamsOfNFT)4618_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ParamsOfNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4877_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6029_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfNFT)4618_storage": {
            "label": "struct BoilerplateParam.ParamsOfNFT",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4877_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6029_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f6b9cc95b96f7185c77982dc5be59b36e2eb79094be9ef4bf95f6f25ac5534f1": {
      "address": "0xbfA0Ce2315049dd678861543536cCF0e96D66403",
      "txHash": "0xed5def92db822f9ab1bbb10e6dccc900df6a2186263782884dc3651061cad73e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:32"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "554",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:33"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4877_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:45"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_uint256,t_struct(ParamsOfNFT)4618_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          },
          {
            "label": "_creators",
            "offset": 0,
            "slot": "559",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:54"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "560",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6037_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:340"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ParamsOfNFT)4618_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ParamsOfNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4877_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6037_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfNFT)4618_storage": {
            "label": "struct BoilerplateParam.ParamsOfNFT",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4877_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6037_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1aeb3421a4aebbfaa761738752847a6f26716a1cb03468669b21d5507d492c18": {
      "address": "0xa9A3Bb3F2dd2842B499D5847273CDff3fBA00997",
      "txHash": "0x2bfffaf30852081cd10be6ef02c9a483ad0faf70945484bd9d65a06e71694b94",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:32"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "554",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:33"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4877_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:45"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_uint256,t_struct(ParamsOfNFT)4618_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          },
          {
            "label": "_creators",
            "offset": 0,
            "slot": "559",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:54"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "560",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6031_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:340"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ParamsOfNFT)4618_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ParamsOfNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4877_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6031_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfNFT)4618_storage": {
            "label": "struct BoilerplateParam.ParamsOfNFT",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4877_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6031_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "40d9f565d8d0ce4dfe0a6c9a8b5cb06101268ac8b82f9e83a4149745bc7e5651": {
      "address": "0xDb6021C8c71469071a2FC67A0feDd07c5FF43aa2",
      "txHash": "0x9b243a99dea0426e27040a3de41bcaf2c09ac558a1bee986d5b6073da754eec6",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextProjectId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:32"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "554",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:33"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4877_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:45"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "556",
            "type": "t_mapping(t_uint256,t_struct(ParamsOfNFT)4618_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          },
          {
            "label": "_creators",
            "offset": 0,
            "slot": "559",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:54"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "560",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6056_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:349"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ParamsOfNFT)4618_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ParamsOfNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4877_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)6056_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfNFT)4618_storage": {
            "label": "struct BoilerplateParam.ParamsOfNFT",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4877_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_mintNotOnwerProjectTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)6056_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isValue",
                "type": "t_bool",
                "offset": 23,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "165bd250e99ebc63137b0324910f06a181c9946ee3a14e1d9e94630e600ecf64": {
      "address": "0xE1438673D58B58747855Edbd7461C30e4A96Ff5A",
      "txHash": "0x88ca32f3051d5714589c234ad38807b8d18d8e7dfbb1e79b39e9f3dbfd054706",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:43"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_tokenProjectId",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4874_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "71195478ce81eed59aafd4ba78b49656b7a6c4761bf16c4663e7803352dd60ed": {
      "address": "0x62825443ff158F9EB61E2086dC402d0bb84c928E",
      "txHash": "0xfdd4b34a06ae7d9ca3f27da02cf4e2f747e1a1111ae45c4e92faee20ed143207",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:43"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_tokenProjectId",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4874_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "43b2b4876e17b07c20d14395f12b5ac3287c3e66bc3b651e52662695500c95ea": {
      "address": "0xCC0740b37CbE5C2B374A8cEA4F9217F9142d6719",
      "txHash": "0x4a426e7370dca141a7e3ce3e1c77de023a4f4de43c522dcb232da525ee2d71e9",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:43"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_tokenProjectId",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:51"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "559",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4874_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "82b99925dc51732e3d2ed4ca59481a7c32ebfb67f177015157e565b4f0f013d3": {
      "address": "0xD2E319Af7f3b179c007d70b5F5228Faa9222c9f2",
      "txHash": "0x205fedce1137afb302bbdcf93ddbc4478b1a8dca786ae8bee9aa828219d1d0c7",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:43"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_tokenProjectId",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:51"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "559",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4874_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1ca10624f35241432469e5f66e1e0338a3bd12102a8a9e8d9f7ace19fdbd7134": {
      "address": "0xA513fa92a4e22BBDb25183B1BCAb4A53A593471A",
      "txHash": "0x1adfa1c7cec5dac7c73873714fbba8e4c21494631e49612813f9e2769bd5f4a6",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:43"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_tokenProjectId",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:51"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "559",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4874_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9fc87a69c7a7702e9efd2ef328d7f54f0e8b1d17e4e9c4343a0ece5a490a098c": {
      "address": "0xFeF19e216e2B4622f34d9De9583Ddb5f2F35D124",
      "txHash": "0x01e8ef4cb520d09d5eb9bdff253148a6fe87ff19933a806d710c8820fe50b528",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:43"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_tokenProjectId",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:51"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "559",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4874_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "70350dac835b41326fa88fb4e7c44f0d30bc7d8b354d8db9a5c0993ac823b16d": {
      "address": "0xACd97330e20a0AC4ff0acb17e59d20c81583B8F4",
      "txHash": "0x8c6091d2cf0f0568765099e5fc26c26fd818c7ff3105154d0cc83ddc31ba3f94",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:43"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_customUri",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "_tokenProjectId",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:51"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "559",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4874_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e849b788b6968f5afb617d1d514deae811c898bc67fe868a6335800e8b37f1da": {
      "address": "0x44F0C63113E6F50843C8B63B4A88d81b5f0c36a2",
      "txHash": "0xd682bf232dfdf04c9cc46a05626fe26ae1a1349865ffd82c907ebd3ca4fd3896",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:43"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_tokenProjectId",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "558",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4874_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4874_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9e2aee19e947d426fa309445bc7b777573b17c306555d1f7286c8809a3fa09f5": {
      "address": "0xFA546aa7cf6068b2bc56F8d744344096Df6c13D0",
      "txHash": "0xa4f89e3b781c6e45475bb9877a09689af9b32c7c73932abda2b8165b3b72651c",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4872_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:43"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          },
          {
            "label": "_tokenProjectId",
            "offset": 0,
            "slot": "557",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:50"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "558",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4872_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4872_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "775e560838da40ebe48780543f0377da8f5f57b4492d87ef3061418091ba35cc": {
      "address": "0x87707F1962Ff7faC9573c8A25CEbd4d040f437B8",
      "txHash": "0x06001ad5a463e7f1fd04d45a0f8056db131fe413722aa48b6f1165eda9ac7854",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4866_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:41"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:44"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:46"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "557",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4866_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4866_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2c84cf67871ccde8eec9ed454c030143e2a973d76405ab3dffe6474e5551632f": {
      "address": "0x90850944666bC0fF5C587B3eC796E783F4F93d81",
      "txHash": "0x31ed44a63cc174afd6799780f72bc32e0c73c8b7e19e3075c1431d7646eb2106",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4868_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:42"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:45"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:47"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "557",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4868_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4868_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d243af09be890e61f77f437c8954497f0937d9c40f475bbbc9294054f310e93c": {
      "address": "0xfF97c19087EDCc1db2E64542eE679eCA0a3C4dc0",
      "txHash": "0xf1db8bedfcc71af418b0215c9ca0a202f809db5f3d102e98a6cf5ec8b4406094",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_tokenIdTracker",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)3177_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:51"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC721PresetMinterPauserAutoIdUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol:163"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "501",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:27"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:29"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "553",
            "type": "t_struct(Counter)3177_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:31"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4868_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:42"
          },
          {
            "label": "_paramsValues",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:45"
          },
          {
            "label": "_traits",
            "offset": 0,
            "slot": "556",
            "type": "t_struct(Traits)4813_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:47"
          },
          {
            "label": "pBaseTokenURI",
            "offset": 0,
            "slot": "557",
            "type": "t_string_storage",
            "contract": "GenerativeBoilerplateNFTCandy",
            "src": "contracts/nft/GenerativeBoilerplateNFTCandy.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Trait)4808_storage)dyn_storage": {
            "label": "struct TraitInfo.Trait[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4151_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4868_storage)": {
            "label": "mapping(uint256 => struct GenerativeBoilerplateNFTCandy.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4151_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3177_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4605_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ParamsOfProject)4612_storage": {
            "label": "struct BoilerplateParam.ParamsOfProject",
            "members": [
              {
                "label": "_seed",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_params",
                "type": "t_array(t_struct(ParamTemplate)4605_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProjectInfo)4868_storage": {
            "label": "struct GenerativeBoilerplateNFTCandy.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_struct(ParamsOfProject)4612_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trait)4808_storage": {
            "label": "struct TraitInfo.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_valueStr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Traits)4813_storage": {
            "label": "struct TraitInfo.Traits",
            "members": [
              {
                "label": "_traits",
                "type": "t_array(t_struct(Trait)4808_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6950840b92b4f271776e76ff68331bc8d61eb0fb93cda84e068c048e8e77eb26": {
      "address": "0xf3432D7B7eA574e183eCFd70785125d2c3C53304",
      "txHash": "0x1df56fe38cdf667f0b0b6277bc26300113b03af963176114444bc40aa7527cc2",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1370377f67c38e7e8ec9e4a441d3bcbf5f14f80725f43d926e139ed5375ce451": {
      "address": "0xbf442564D0CA7a66F95a15eEA96641315Eb23420",
      "txHash": "0x65437e382fa9b2f8855eae0641b846f42a58a5e900f70ade0f5708a7819ca6bb",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dd5e64f21ff5ff1160868663c2043a31afe03b5fe6f16bcead457967be9453a7": {
      "address": "0x753118bBfeA5308d6f40C6213dc0702326dbAf45",
      "txHash": "0x2e872d7113755f0e7e32f64d2f92dec2451fed34a12da38b4b845f6be59f61c7",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "44cae6c8545a4910b57fa9732e84b6787a68ef6c4db05f8a1215bb33ab610cb2": {
      "address": "0xa7Deb7B70504dCBfFfF3eb544010C34Db98e0FA7",
      "txHash": "0x922383f6153d2f9e3e6d4ba6e2a0a358c8ab1691cb3b2d38efffa1c8e5386d7c",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2feeb93889027cecf80d1ba3c571531bac88380af8a6f8411e41def3cbbd5879": {
      "address": "0x08ADAE46f94A025C6B95fFEB21654A5878B9ff10",
      "txHash": "0x9ac7cdb0d6b5c2144976473eb62fa47d1c075cd864dcb7fbaf9eb2f607ab2e05",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7d7a94180d421e8698b585b3449ced6fb1ef2839c3c19d6d13bce6a0ca2d7348": {
      "address": "0x46b97eC31CD366ba3b28a06e51247488F91fEbd3",
      "txHash": "0x1aef5248893f4f0656b924a4ca30dbc6f66ce6ab9fa886c639aaf9f65da3fc77",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f945f30b005bcba25be395c42c5f2c467d5b77ba7056e20b594139499b6dc9a1": {
      "address": "0x0277dDE3B0ea056a4145EFdE0B9E5734217fd61F",
      "txHash": "0xb0af6ced84eb11b61e277267aaba87a93254b91170b183f27bcd8561d412f702",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "658bda78e06c5949d957f7e88a677cada3cdfa29d6c5d640ad294b9d660dde2e": {
      "address": "0xd5e0aBc8B3a33F4704fEfaE7E1547C0D2E750724",
      "txHash": "0xeaa661026ff8f9c476aef910bca8984c625a8d2adbead95b9519a39898dcfef0",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8193abdc201866f5e22e079f43203eecad173ff387bb54b4598cb00c285597b4": {
      "address": "0xc6406f05Ab44E6192e3F7ac759d0Eba55077678F",
      "txHash": "0x574a79db7820c561816ec96046023796d5c5cd3489c8f2fad3042a5fa36addeb",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3c3d19a5191e4b8ed2ada695f1f65ca98f5ddf4b81a0d840e731c71c39151411": {
      "address": "0x8156Bc835B8e1a14E820d31e6B0F63eC4e45a7da",
      "txHash": "0xe50c68816674750cf516703085be22d565c7c2e7657d4f9aabad871182ce01b4",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f29db43977a851f31410381e14c8081c108e3e2d99fbca0e3644c0452297c722": {
      "address": "0x6aDE49C62b9e6fb742B841F7951C4B90060BC19D",
      "txHash": "0x49cf0678a31767cdcaa3ab5c831c2982d67be03622e3438fe6118974fb6c6d98",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b8ccf5caa5eb7ba0718246d7539dcba86b0980fedbc29bad791d869a6f76e122": {
      "address": "0xDD9AD868578A20F6Febb8B0a2Db51Ef850751987",
      "txHash": "0x93cca432a7c6329f8b92b38efcb1e45f66072a5a02e0dbf661737d0006ec7d89",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4598_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4614_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4598_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_mintTotalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4614_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "_mintNotOwnerProjectMaxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d93462e5e57e375e9f73893eb2bd6b369612bbe9a8b3249267e1d04f067f994": {
      "address": "0x6EB863286DC6D20419535eC84099777f4c4a1AEd",
      "txHash": "0xd0311597c5ef55ba286dc91bd08a6c5da9d63c537bf923f07ccd7822c3ab2a2d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)8310_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)8326_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)8310_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)8326_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)8310_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)8326_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e46047510acf3530254d87c37b7d29f75e51401ed8e350ca03f823f1023bd052": {
      "address": "0x5ceC4234deF88571cfCb38Bb05eb33a315613fd6",
      "txHash": "0xab395a5236929202dee35547bfc1d4e68aa0d13f2f0ec8ce8f9e2bfcdbc050b2",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4583_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4599_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4583_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4599_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4583_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4599_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8b581977b67aabb2cdd30da8f6a81accb67d28cc82c94486f07530e9def49f59": {
      "address": "0x5308235CAB640c635B00379175B430b5B0e20Bc4",
      "txHash": "0x00efaaea355651fae136d0b869f2ec8c3a29f6e52988cda0adf17f66a90c0505",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)8312_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)8328_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)8312_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)8328_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)8312_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)8328_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 20,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "88e0a4acc92bed891e3517889757f17e7e1e500fdbfc63e2101323e559ab9dd4": {
      "address": "0x7De657758e5C2F04eD582752b90e3FF551C9F6dA",
      "txHash": "0xac1f88dd66e9fcdc20c88b7447dbf4f292d0451773c43d9efd39683e3a2bee18",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4585_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4601_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4585_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4601_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4585_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4601_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 20,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "37d65df8e031884728be0b79a731e63cb3006418fb69507c4e27c945d96e3b84": {
      "address": "0x03b189700cbc86C3b5A8339157E90c057e58aD77",
      "txHash": "0x7d85fc3d9b2ef940cf9cc7796ead106aeaea4488153b8c329f243319a8535ec1",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)8558_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)8574_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)8558_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)8574_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)8558_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)8574_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 20,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f99ead3db417e7c17c67588e5defb96d4723974b5dda387b285168d7c66abc8e": {
      "address": "0xfF7923E43812dAcE79E0c886739d6CD165282F1F",
      "txHash": "0x43e14af74dc452b4131e19b2945a8648c8e2bed53e201118b0f90755771190b6",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:26"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:29"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)8558_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:31"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:34"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)8574_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)8558_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)8574_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)8558_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)8574_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 20,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a0d25f4e5649fe7168e5cbf1fead0d669beb6426b70adbdcd41e9ee349d5bfbc": {
      "address": "0x4B2464E702537ae498ADA5269c37Da8268d5848e",
      "txHash": "0x96391946c33670155b71570b0379d3982894e9a477f3e93f3ea599a6cc19512e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:25"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:27"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:30"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)8333_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:32"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:35"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)8349_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)8333_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)8349_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)8333_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)8349_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 20,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5698481e1a3bd17e622e0e4fd5c460ffa872ec2bb486c356f1601ddda9cd4c22": {
      "address": "0xd3e671E4f3D927Cd773006042Fe184870aB20fEa",
      "txHash": "0x02baca2d6aef2d36e7f9b1b78a355540dae148e9c2ee824e0db8774b2b69c4f2",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:25"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:27"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:30"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProjectInfo)4606_storage)",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:32"
          },
          {
            "label": "_seedOwners",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:35"
          },
          {
            "label": "_seedToTokens",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))",
            "contract": "GenerativeBoilerplateNFT",
            "src": "contracts/nft/GenerativeBoilerplateNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ParamTemplate)4622_storage)dyn_storage": {
            "label": "struct BoilerplateParam.ParamTemplate[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes32 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectInfo)4606_storage)": {
            "label": "mapping(uint256 => struct BoilerplateParam.ProjectInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ParamTemplate)4622_storage": {
            "label": "struct BoilerplateParam.ParamTemplate",
            "members": [
              {
                "label": "_typeValue",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_decimal",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_availableValues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ProjectInfo)4606_storage": {
            "label": "struct BoilerplateParam.ProjectInfo",
            "members": [
              {
                "label": "_fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_feeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_script",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_scriptType",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_address",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "_customUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_projectName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_clientSeed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_paramsTemplate",
                "type": "t_array(t_struct(ParamTemplate)4622_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_minterNFTInfo",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_editable",
                "type": "t_bool",
                "offset": 20,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a426616f6615760cad5e05e50be071d564db6df5a0fc105330082cc80f049583": {
      "address": "0x741EFB499A73423222Fa25911B90bC298274BE3b",
      "txHash": "0x4fe22cdfdb610dcd8c5947731a2d260246ecb288b095ea916c59f07cd5181473",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "359",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "361",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "362",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:29"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_nationsEmo",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6766_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6766_storage)": {
            "label": "mapping(string => struct AVATARS.NationEmo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NationEmo)6766_storage": {
            "label": "struct AVATARS.NationEmo",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ccf069d2ce31030fefa76767b0bc3a9de8e23353488eb0b757c6ce08ff23da89": {
      "address": "0x1a1ABC9A8c5E29e26668749576C71556f95800c9",
      "txHash": "0xd23bfd8bdf080f46a34914d804cc9d356a957ff4b63490ffdc1d2bf45fafc1d4",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:33"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_nationsEmo",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:44"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:51"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:57"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)": {
            "label": "mapping(string => struct AVATARS.NationEmo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NationEmo)6768_storage": {
            "label": "struct AVATARS.NationEmo",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5b2d6797621b0f0939d06dfb8e059379ab3874a213aefd184ddc158868016c81": {
      "address": "0x268640400C1b521a990aeB3cCfeDcc83C9820772",
      "txHash": "0x9c5c3fb7aaeabfd008893eb9caa82b161986c867aed584cbd29071464e211654",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:33"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_nationsEmo",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:44"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:51"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:57"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)": {
            "label": "mapping(string => struct AVATARS.NationEmo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NationEmo)6768_storage": {
            "label": "struct AVATARS.NationEmo",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d78e17828dffba6bfededcb44e3edc2e1576bbce4a48797422ea896ebdfa6169": {
      "address": "0xb38f54f1ac6A3A6E53EfCA453a718E63606AA3f2",
      "txHash": "0x57222b4043af125064806a971137a781db46818b07b73cfa8527f8a64280f882",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:33"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_nationsEmo",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:44"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:51"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:57"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)": {
            "label": "mapping(string => struct AVATARS.NationEmo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NationEmo)6768_storage": {
            "label": "struct AVATARS.NationEmo",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8d32beccf33bd8c27978394048cb0daf29736eb4e382d7d677a4d487319f2392": {
      "address": "0xEdfFD5DaE102DC41303297905C168943D158DC83",
      "txHash": "0x905f358e2586f6bb2da9cd47e3c4c6613dc0ab233972fc9ec8a7da379d5eca9e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_nationsEmo",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)": {
            "label": "mapping(string => struct AVATARS.NationEmo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NationEmo)6768_storage": {
            "label": "struct AVATARS.NationEmo",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a69245b640bccbf2c2db4fc827ba946b864a70671533810e61ef65b331bb6be8": {
      "address": "0xFC0890d37c104dceCd6B3c2ABf6e21c9bc604ECb",
      "txHash": "0x03584b45312fe6bf751d34001ece590e95bc871ea592b17e21f11e2c41d950c3",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_nationsEmo",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)": {
            "label": "mapping(string => struct AVATARS.NationEmo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NationEmo)6768_storage": {
            "label": "struct AVATARS.NationEmo",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d0cf461eee300b3c04404c260adb6ad749f6fe4888a6cb338d01409de6ccc790": {
      "address": "0x707316770Fedb343701Eeb9F2Bc054e9ec040af0",
      "txHash": "0xbac1a2a29c3c61c79d5469687e218e5fc7e35769e74d8e40fc172181808d7ef0",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_nationsEmo",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NationEmo)6768_storage)": {
            "label": "mapping(string => struct AVATARS.NationEmo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NationEmo)6768_storage": {
            "label": "struct AVATARS.NationEmo",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23c11f6ff71cb17c2bb804f26cc4bfd3490268abe4e925ef3d8c4654fdb05590": {
      "address": "0xEDF8E1DD3992D4038952856B4d472806d4b37E6C",
      "txHash": "0xdaaf2b2fb0cf5f512227a603e811d40babfe4334e37f00aef9533aca60c7bb6e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6768_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3341b977a5e025b32caba19903e94d8a584b480f6b1e3b7c44f559cd2016219c": {
      "address": "0xCdD20b15eB14Da9549399591253a7D6b85057B89",
      "txHash": "0x2356f62cb95cd9b9643992d30db0acadf598a8230eb10cc3b23c542bcfc5e0be",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6768_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "97ed7a57d1dc6f97f9058cc6e7e92764b1b537c7620919d86ee6a5b75feba75e": {
      "address": "0x0f5a0cCDB1AC8BAEf26DbbD0b3DC0c68FF0c2182",
      "txHash": "0xff6cc6a66cf9489d8da55d5027a0e96fb47cd80f99e2e56f2d2b97b276e613b4",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6768_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f45b8ccac7626e337c85a9e4d65d54e74f9ca36efa229c793285ca664d55de0a": {
      "address": "0xBE01E7C32df2606eFa128DF10F85deb253e93C3d",
      "txHash": "0xdbd4ea13e652c37917c813369449ee4dbbd7c27fc3813904787d97b43db6ede3",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6768_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a3a8af4cf539e94894ee53180ec70ce72b9f9890b890b9707978670656018ffc": {
      "address": "0x7A6850D2b54120a058c8E17AAe32D7BEa42E7D30",
      "txHash": "0xd4f50e2e6081075311e790e1daa9deb82388b479c41db8e97772aa7a3fd7555a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6768_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2ca0d1c7ae52691ec12e883daa182d55ee45f8f4aff84fefbb0680b9f442a947": {
      "address": "0xE5CD27EbfdC9Caa6f1220E0Bd594A26ea38c1C67",
      "txHash": "0x6e78d1c054edc551c342e49efde4954d6a6283e1386db726516e51a376c3998c",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:31"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:33"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6771_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:44"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:51"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:57"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6771_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6771_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a73eb46ef2c210b8e50afa830288bc0b65f4cb19bd55cfae0521f6d7649c6114": {
      "address": "0xf81264B5A7EB063a484B0FCCD9a538F88e9813A8",
      "txHash": "0xb91fb87b3cbbe1e180f802826c1d0b7f8da41fd1ea2b30e0abc6b436974598b6",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6768_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d4edf708eab8f8f4dfd943659138dd189521d5d10d1158a26eea70f45a0abc7f": {
      "address": "0x08B87EE8F304aBE98243E54Bbb2022e5304251F8",
      "txHash": "0x5f0133b6b2e5c0e7e270a84316de904686cd4bb757a45656e03543e9c43366ec",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6768_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "21666f3652c107aec0c996f109dc2f098f17ca4af4ae776a1069ad779b372735": {
      "address": "0xEeFE87A431248C413c2A7d8d802caf20D53b1a49",
      "txHash": "0xe79004fcfa6c7189001c9a09f8e51cc20685779f655c42843c3d72a5196a00b8",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6768_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "54a00b5cf00f4bf87353f4a802d6be17343ee314d942f417ea3824e0f6307259": {
      "address": "0xFdC9374Efc820C8b0a0D48B69944b079114161aC",
      "txHash": "0xfcfde4ccdbea896c84d877ec88f62ffc6b5c231ea37a133ad9e391ff83a34fc7",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)954",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1049",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1129",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6749_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)954": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1049": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1129": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6749_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6749_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c38e4b97d6fcf47bffd475d637fe98a97106804d53de6ccb9f912b31a58ba921": {
      "address": "0x8Bc8DFDd201801eeD90F6d172f4EF0BF2B05e06d",
      "txHash": "0xbd3097d34acbf1186c0dc004b934e5938415e26135caa8943bb141978d944972",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "s_ens",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(ENSInterface)973",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
          },
          {
            "label": "s_ensNode",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
          },
          {
            "label": "s_link",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(LinkTokenInterface)1068",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
          },
          {
            "label": "s_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(OperatorInterface)1148",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
          },
          {
            "label": "s_requestCount",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          },
          {
            "label": "s_pendingRequests",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ChainlinkClient",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "360",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "362",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:30"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:43"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:48"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:49"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:53"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "380",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "381",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ENSInterface)973": {
            "label": "contract ENSInterface",
            "numberOfBytes": "20"
          },
          "t_contract(LinkTokenInterface)1068": {
            "label": "contract LinkTokenInterface",
            "numberOfBytes": "20"
          },
          "t_contract(OperatorInterface)1148": {
            "label": "contract OperatorInterface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)6768_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)6768_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d6e8660af9aaf94c841029b045c3f86c6597d30a3f15561df6cb1ae54c9cbfa6": {
      "address": "0x26cFD649a422a132Efce69287edA64D509D4615d",
      "txHash": "0x0188db0a3026a73945f69e506217dded5d7cd5316cd530fc3c83c84eb9eac141",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "356",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "358",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)7040_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "364",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "365",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:51"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "366",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:57"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:64"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)7040_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)7040_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1dc4c429fbd408e3255cd0377866e4f4745f13bb0cf968eec7e2bf04cc82e935": {
      "address": "0x8136dCb75416947525Ac4BeA405D86a1Ee1D6cd8",
      "txHash": "0x46b5191052a304978f9db4e927546920aeee193b73cb089cfb5b755ecebb35db",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "356",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "358",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)7040_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "364",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "365",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:51"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "366",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_skins3",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_beards4",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_hairs4",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:57"
          },
          {
            "label": "_hairs3",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:58"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:64"
          },
          {
            "label": "_gloves",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)7040_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)7040_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f9a34915342ffa1ffa38b203a45184f8743f22bdcdb8bae7e8bd580cc126593c": {
      "address": "0x93F7a410f94f5adC89429ddc1853B112a77Dc311",
      "txHash": "0xd874dd1d402936e72df8fc962e41b46189351226ab80c611de0ace170436919d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:20"
          },
          {
            "label": "_be",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "356",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "358",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4602_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          },
          {
            "label": "_nations",
            "offset": 0,
            "slot": "364",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:50"
          },
          {
            "label": "_emotions",
            "offset": 0,
            "slot": "365",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:51"
          },
          {
            "label": "_emotionTimes",
            "offset": 0,
            "slot": "366",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:52"
          },
          {
            "label": "_dnas",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:54"
          },
          {
            "label": "_beards3",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:55"
          },
          {
            "label": "_hair10",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:56"
          },
          {
            "label": "_hairs7",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:57"
          },
          {
            "label": "_undershirts",
            "offset": 0,
            "slot": "371",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:59"
          },
          {
            "label": "_tops",
            "offset": 0,
            "slot": "372",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:60"
          },
          {
            "label": "_bottoms",
            "offset": 0,
            "slot": "373",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:61"
          },
          {
            "label": "_shoes",
            "offset": 0,
            "slot": "374",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:62"
          },
          {
            "label": "_tatoos",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:63"
          },
          {
            "label": "_glasses",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:64"
          },
          {
            "label": "_captains",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4602_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4602_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6e5f1f432a9d282058707788d64a07f9cb60d817d0af14aabb64ea16e773a71d": {
      "address": "0xD72bCE1e2a5A4dC408050Cb7Af53b0f9A285c604",
      "txHash": "0xf83850ea5305d20a16720d5cb8cca35f089de2f9ec1e8e4d3ce2c0cd8150888b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df5703c62fe81004551a476cff0f99396ad6a508df883317f7f9bf38173e9bd1": {
      "address": "0x8B40fbb74F7892F0eEd38b1F5435782598FDf933",
      "txHash": "0xe7645455c8b4f6a24251827f84403895e6aef11aebf63ab77643f0356c053f90",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bf632571a8a51774227c1c31d07ec6e35d93d00068138afe4791185096d94ebe": {
      "address": "0x6B7f1c253D596F971970eDBA5aECB417EfB05a6d",
      "txHash": "0xcb1cf6654990e0f3936e262071cb545afdf3c3dabe720c66bed06577c958e508",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8e945122925e97b13d926efb1cee7b42f1762091f181b6384763e762f24d6efb": {
      "address": "0x6130fc6e76969a69A611b40b4D66B4Bf24D892A6",
      "txHash": "0x78dda65b7bb1942b922a85d967e41267f4690a141874936f1e38304b552e6c30",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f35b3dc9c4730ee811986feaafc13cc213c18308e806916753af629833c5af38": {
      "address": "0xeB525396Fba0d030A4BA9626f9F8eCed68474dCd",
      "txHash": "0xd92838b8f4c5af5f7dcc7aeef084e20ba917fe19bd87fdc8ceb1c6e68ff9171c",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "249f564a0695a497abbbb75a483c9f66c99967f7fa860d694072ddedb4f9260b": {
      "address": "0x979Ba8F631AAD891E17C03fDF8396551CbB6DaC2",
      "txHash": "0x1ca2879bda75eb3fa76b761dfe96c8e1aaa12603d1226b0d40cfb8c01297f32f",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f9abff9ffc8647420c89bb2f0d3d33adc082e96d84efff876b3a0837cd1e48b4": {
      "address": "0x003Ac9541345346289449443a1d8e04cb82BbeaB",
      "txHash": "0x22bbfab03650b0e45c81f4d4046f036d3d7d3d4f4408d0a773fc04e60b961955",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9c38060f321a8c603b17cefdd38bf13d1c59537a4c754de80cffc410e97dfdbf": {
      "address": "0xFf0AC002976eFcDAbde2E88717ed4079DcA6eF01",
      "txHash": "0x7463177383e8ff69d47159365c1b115eb4ab39c6589978c7d804120c5cab1abc",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)11354_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)11354_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)11354_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ea213c2db29b6149f20f9be677c80333ca0d8ade16a9d6fcea30ff7ed6491129": {
      "address": "0x9Ef69dF076d4D28068b19a058824B80B02E136Ff",
      "txHash": "0x538b45b23c7561df9d82b865de9448622caa7a7c37d45becaa134ae058b460d2",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "451195b671037a81e80a9bb87bd3c0f2c05907d89c2814572b2ed03926fcb606": {
      "address": "0x52d2681b9084298E3391543488030108F8C88B4c",
      "txHash": "0x24c039062d00fdcbeed365cc0d0ab214acacac825ff64226c6ccf867fd0898f0",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9bd08b581430bb8f4a42c27fc4fe6abe2a087998f62ae37ca66a7ee63229b263": {
      "address": "0x173c2Bea19Fb1EF6ea05052F38BE1AA850Fc07a2",
      "txHash": "0x8be1c27154cd64adf865d976095dbbe641d3eddf6248b1cfc4982fce39963a68",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "33495397802e568f0c7a4cd814618b8d6d4641285ed76544ec5fab78dbff35e1": {
      "address": "0xFc16825Ed3d93C97F63379F06abc825b4259F98f",
      "txHash": "0xfdd45de0986f7c43394056e2f77eaf857ef25122bfdc86a1c6190590c0c55963",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7e84778858fb581816b83ae8843dc991e32f0ee4a1e56f2ac07fc5776248dddb": {
      "address": "0x37c94bDe4c61428176e3e82Ca201C3E1b2f3E256",
      "txHash": "0x313f565a56630b53e087fb53a330ff358df6610b2597365ab9675131f996fc05",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ebf36f30ff985da1d621cf15d3bd687007fd47bbfb55d5145f71f234cb2044a6": {
      "address": "0x59F51F428f0D3642E58BDaDBdD68b817C15fBECb",
      "txHash": "0x2aba8fb3549e8c4b7a107e351632780206a13dbc4f1ad38b0d5ed743ef4c6d8e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a3602be004c4362de1e48f7a16252ec008c773bd0e5bf846e13e31fdb1be801b": {
      "address": "0x239373Cf1276a690ff7D34b184f1ffb3d8b34472",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10d632e6b80267e98b80558207fd062ae94884fa49d60dc38b0224aeab29204d": {
      "address": "0xf623B6fB09E1a379815389123caC7eDDc38281f0",
      "txHash": "0xc7e2b1a7631d4cb2fad976e0fdb343dc642971fa637753311ec1afc28521e382",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:21"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:26"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:32"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:34"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:36"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4613_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4613_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "477ad4be44c1e109092e5d2b3f4333d05dcf440d14812d2691bee14a5db666e6": {
      "address": "0x4AEc5a9693045121Cf6cF9352b779180ec0E2061",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:29"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:33"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:38"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4616_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4616_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4616_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "allAddresses": [
        "0x4AEc5a9693045121Cf6cF9352b779180ec0E2061",
        "0x226513031eB5504326f23d76B53A3a52b7A9bf1A"
      ]
    },
    "bf8d08b7638389c18241526c93725b5deda006dc78f87b18398142779e8ac7ab": {
      "address": "0xCeA6B3d77afBF2e0d575f5bCF0a81373E455A477",
      "txHash": "0xe059138aae36d9dab9554508b41a8569b0a4556affd03aaac643c2afa9443b4a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:29"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:33"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:38"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4616_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:46"
          },
          {
            "label": "_limit",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4616_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4616_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "799bdb2ff077ddaf333d31f77f7910d79f99cb5074e299ae79db799fb18195ec": {
      "address": "0xe1774664513Cf24611e0Af32245eEC057B2D1E21",
      "txHash": "0x2ba0b25d336596dfe458c489cd2ab05b7a8f4144e3bf545d7faed48015f152fd",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:29"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:33"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:38"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4616_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:46"
          },
          {
            "label": "_limit",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4616_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4616_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "67e2a39103ba4d698e8c6a4453223ad88890850e8886ff79f82998888a6c7a76": {
      "address": "0x23903Fd845fEc43B46977C9c0a178ab91ebB3C5a",
      "txHash": "0x9c80125cb2a5ccdecfbd1df5ee91bc2ee2289f745e4dafe5ec9676b9acca05cb",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:22"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:23"
          },
          {
            "label": "_oracle",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:24"
          },
          {
            "label": "_requestIdData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:25"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:27"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "357",
            "type": "t_string_storage",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:29"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:33"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:35"
          },
          {
            "label": "_whiteList",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:37"
          },
          {
            "label": "_whitelistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:38"
          },
          {
            "label": "_moods",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Mood)4616_storage)",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:46"
          },
          {
            "label": "_limit",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "AVATARS",
            "src": "contracts/nft/AVATARS.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Mood)4616_storage)": {
            "label": "mapping(string => struct AVATARS.Mood)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mood)4616_storage": {
            "label": "struct AVATARS.Mood",
            "members": [
              {
                "label": "tempEmo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tempLastTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c6dcec367a7ce8eb679c3adb9e3043d91baaa6ade9fb3393bb7349b84c526abd": {
      "address": "0x3B5Ee34Fc041C69e8FbcF378e489AD1c4E9E97D2",
      "txHash": "0x46b3ab94bd4f4a1e03b0a3561f8b933fd20e9773123b8c167037da6a91080459",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:20"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:21"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:23"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:24"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:25"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:29"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:31"
          },
          {
            "label": "_limit",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8c431a3b7b7caa6e71c782ae378d582ead37649aa80f6073f24388f7b8481ca5": {
      "address": "0xB8d2F69801f6fd24B0e9417dF0693bC89c8406D4",
      "txHash": "0xb3deb178a738ababd90dd247d3f7c6d1a9a3a1a6de8e5c1f86e0593afee801e9",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:20"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:21"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:23"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:24"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:25"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:29"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:31"
          },
          {
            "label": "_limit",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "be5cb4e091fad9ae5d18c45e261d6179c11c42d8bde09802547212c4a277adbf": {
      "address": "0x4eDE0cfCE841c2a7e0E3FFd557E1A9f25147dC9C",
      "txHash": "0x5d35b680cd44ff10b62c65e135c8848c58705b909de8f9da9f64e037e491aa6f",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:20"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:21"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:23"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:24"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:25"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:29"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:31"
          },
          {
            "label": "_limit",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CONFETTI",
            "src": "contracts/nft/CONFETTI.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d8065e8e060bf905033aa042dba37a2b13969a9c7ed3db879535b2ee99311e06": {
      "address": "0x6eE37737A00CDBf250A0335a66FFFa9BfB35976D",
      "txHash": "0x24fd26744a546dfe50413f28232726d6fa20140664cd66f01ae0e37f29104702",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:20"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:21"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:23"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:24"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:25"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:29"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:31"
          },
          {
            "label": "_limit",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8b9a5df9a00a512b31c667016084287e47bf0205fd034076164751ed02522c7d": {
      "address": "0xAD9bF9b4ECfAcFFdCEBbd5Af22f6BD38Ef3B8d27",
      "txHash": "0xb281f81ebcea1fbb4be77672ab470c570bade60a0e39da8db0051d4af4b0d79f",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:46"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:20"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:21"
          },
          {
            "label": "_algorithm",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:23"
          },
          {
            "label": "_counter",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:24"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:25"
          },
          {
            "label": "_tokenAddrErc721",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:29"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:31"
          },
          {
            "label": "_limit",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "HORNS",
            "src": "contracts/nft/HORNS.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
